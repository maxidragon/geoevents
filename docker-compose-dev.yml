services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: geoevents-dev-backend
    ports: 
      - "5000:5000"
    volumes:
      - ./backend/src:/app/src
    restart: unless-stopped
    environment:
      - DATABASE_URL=postgres://root:password@database:5432/geoevents
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 5s
      timeout: 20s
      retries: 50

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: geoevents-dev-frontend
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "5173:5173"
    restart: unless-stopped

  database:
    image: postgres:16
    container_name: geoevents-dev-database
    restart: unless-stopped
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=geoevents
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 5s
      timeout: 20s
      retries: 50
    
volumes:
  database: